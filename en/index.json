[
{
	"uri": "https://tang.sipeed.com/en/risc-v-core/hummingbird/",
	"title": "Hummingbrid Core",
	"tags": [],
	"description": "",
	"content": " Download the SDK We have assembled an All-In-One SDK that includes SiRV-SDK Toolchain, and OpenOCD. You can download the SDK from given link below.\n sirv-e-sdk.tar.lrz\nConfiguring the working environment Extract the downloaded archive to the current working directory.\nlrzuntar sirv-e-sdk.tar.lrz  You will need lrzip for the above command to work. Install it using the following command. sudo apt-get install lrzip\n Compile the demo program We are going to Compile a GPIO demo that Blinks the Onboard LED on Tang Primer.\nUse the following cammand to compile the Demo.\ncd sirv-e-sdk make software PROGRAM=demo_gpio BOARD=sirv-e203-lichee  Upload Demo to the board We need to first setup proper permissions to access USB Debugger.\nAdd your username to plugdev group. Replace \u0026lt;username\u0026gt; with your present working system\u0026rsquo;s username.\nsudo usermod -a -G plugdev \u0026lt;username\u0026gt;  Set udev rules to enable Tang Primer to be accessed by the plugdev group,\nExecute the following command in terminal to create a new udev rules file.\nsudo nano /etc/udev/rules.d/45-dt2232.rules  Copy the following code into the text editor and save it, as shown in the following image.\nSUBSYSTEMS==\u0026quot;usb\u0026quot;, ATTRS{idVendor}==\u0026quot;0403\u0026quot;, ATTRS{idProduct}==\u0026quot;6010\u0026quot;, \\ GROUP=\u0026quot;plugdev\u0026quot;, \\ MODE=\u0026quot;0660\u0026quot;  Execute the following command in terminal to restart the udev service.\nsudo service udev restart  Press ctrl+x to save the file\nConnect Tang Primer with RV Debugger as shown below.\n   Tang Primer RV Debugger     U0_RX (Pin H13) TX   U0_TX (Pin J13) RX   E_TMS (Pin C9) TMS   E_TDI (Pin B6) TDI   E_TCK (Pin C5) TCK   E_TDO (Pin A4) TDO   GND (Pin G) GND    Pin locations on the Tang board can be found in Pinout Diagram.\n Execute the following command in “sirv-e-sdk” folder to upload demo into the board.\nmake upload PROGRAM=demo_gpio BOARD=sirv-e203-lichee  Debugging the Demo OpenOCD provides us a nice way to debug our programs.\nRun the OpenOCD GDB server with the following command and leave it running.\nmake run_openocd PROGRAM=demo_gpio BOARD=sirv-e203-lichee  In the other Terminal run the following command to debug your code using familiar GDB Debugger.\nmake run_gdb PROGRAM= demo_gpio BOARD=sirv-e203-lichee  "
},
{
	"uri": "https://tang.sipeed.com/en/using-tang/using-gpio/",
	"title": "Using Tang&#39;s GPIO",
	"tags": [],
	"description": "",
	"content": " Create a new project In the Menubar goto Project -\u0026gt; New Project or uses the shortcut key Ctrl+Alt+P.\nFill in the Project Name and Project Path fields. Note that you may create a new directory (such as \u0026ldquo;gpio_test\u0026rdquo;) by clicking on Browse and then clicking on the Create New Folder icon in the \u0026ldquo;choose a directory\u0026rdquo; window. It\u0026rsquo;s generally recommended to keep each project in its separate directory.\nSelect Device Family and Device Name for Tang Primer as shown below. When done, click OK.\nCreate a new HDL source file. Right-click on Hierarchy and click on New Source to make a new HDL source file.\nSelect the HDL File Type and enter a source file name in the File Name field. Check Add To Project to add this file to your project. Click OK.\nCopy the following code into a text editor and Save it, as shown in the following image.\nmodule gpio_main ( input wire RST_N, output wire R_LED\t); assign R_LED = RST_N; endmodule  Now we need to assign physical Pins to our IO ports. In the FPGA Flow pane, if there is a \u0026ldquo;+\u0026rdquo; to the left of User Constraints, click on the \u0026ldquo;+\u0026rdquo; to show the IO Constraint and SDC Constraint items. Double click on IO Constraint to open the IO Constraint Dialog.\nSelect the IO Bank and Pin Location for Tang\u0026rsquo;s onboard LED and Button then save it as an adc file in the project.\nClick on Run Icon to start the compilation process.\nPlugin your Tang Primer board to USB and click on Download icon to open Download Dialog.\nMake sure your device detected by TD IDE. Add generated bitstream file by clicking on the Add button. Click on the Run button to start the download process.\nDownload the Bitstream into SPI Flash to make your design run after a power reset.\n"
},
{
	"uri": "https://tang.sipeed.com/en/hardware-overview/lichee-tang/",
	"title": "Tang Primer board",
	"tags": [],
	"description": "",
	"content": " The Tang Primer at a Glance Tang Primer uses Anlogic\u0026rsquo;s EG4S20 as the core unit, 20K logic unit (LUT4/LUT5 hybrid architecture), approximately 130KB SRAM, built-in 32bit bit width 64MBit SDRAM, rich LVDS pin, built-in 12-bit 1MSPS ADC This provides unlimited possibilities for Tang Primer:\nTang Primer features  FPC40P socket, can be connected to RGB LCD, VGA adapter board, high speed DAC module. FPC24P socket, can be connected to DVP camera, high speed ADC module. Resistive touch screen controller for I2C interface, used with RGB LCD. 3-channel DCDC power supply chip, stable and efficient power supply, independent adjustment of Bank0 IO level. FPGA configuration Flash, 8Mbit User Flash, nor/nand optional. Onboard FPGA JTAG Download Debugger. Onboard RGB LED The adjacent pins LVDS are drawn in the same length, and 8 GCLKs are taken out, and 8 ADCs are all taken out. The double row pin spacing is 900 mils and is compatible with breadboard development. The half hole leads to an additional 40 IO and the entire board leads to 130+ IO.  Pinouts Pinout for New Tang Primer Board.\nPinout for Old Tang Primer Board.\nResources   Attachments   EG4S20_DataSheet_V1.5_english.pdf  (1300 ko)   Eagle_DataSheet_V2.8_english.pdf  (3502 ko)   LicheeTang\u0026#43;RV.pdf  (1085 ko)    "
},
{
	"uri": "https://tang.sipeed.com/en/getting-started/",
	"title": "Getting Started",
	"tags": [],
	"description": "",
	"content": " Chapter 1 Getting Started Find out how to getting started with Tang Primer board.\n Requirements Installing Tang Dynasty IDE Installing USB Driver Getting to Blinky  "
},
{
	"uri": "https://tang.sipeed.com/en/risc-v-core/picorv32/",
	"title": "PicoRV32 Core",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://tang.sipeed.com/en/using-tang/using-microsd/",
	"title": "Using MicroSD Card",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://tang.sipeed.com/en/hardware-overview/ov2640-camera/",
	"title": "OV2640 Camera Module",
	"tags": [],
	"description": "",
	"content": " Features  2 Megapixel Array size: UXGA 1600X1200 Power supply: 3.3V IO voltage level: 1.7V~3.3V DC Output formats:  YUV(422\u0026frasl;420)/YCnCr422 RGB565/555 8-bit compressed data  Max image transfer rate:  UXGA/SXGA 15fps UXGA/SXGA 30fps SVGA 30fps CIF 60fps   Resources   Attachments   2640-XT400G2.pdf  (69 ko)   OV2640-DATASHEET.pdf  (661 ko)    "
},
{
	"uri": "https://tang.sipeed.com/en/getting-started/requirements/",
	"title": "Requirements",
	"tags": [],
	"description": "",
	"content": " Thanks to the simplicity of Tang Dynasty FPGA development environment, Tang Primer needs very few things to get started.\nGetting the Tang Dinasty IDE Just download the latest version of Tang Dynasty IDE for your OS (Windows, Linux) from here: it’s that simple.\nGetting Example Code Tang Primer comes with a lot of examples. They can be downloaded from here.\nOther Resources TD IDE user manual and Datasheet in English can be found here\n"
},
{
	"uri": "https://tang.sipeed.com/en/hardware-overview/",
	"title": "Hardware Overview",
	"tags": [],
	"description": "",
	"content": " Chapter 2 Hardware Overview Here you can find details about the Tang Primer hardware; that includes detailed diagrams, pinouts, a description of usage, an idea of when to use each product.\n Tang Primer Board OV2640 Camera Module LCD Display Module RV Debugger  "
},
{
	"uri": "https://tang.sipeed.com/en/using-tang/using-lcd/",
	"title": "Using LCD display",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://tang.sipeed.com/en/hardware-overview/lcd-display/",
	"title": "LCD Display module",
	"tags": [],
	"description": "",
	"content": " This 5.0” TFT screen comes with 800x480 pixel resolution and an LED backlight. It\u0026rsquo;s great for when you need a lot of space for graphics. These screens are commonly seen in consumer electronics, such as miniature TV’s, car displays, etc. A 40-pin connector has 8 red, 8 green, and 8 blue parallel pins, for 24-bit color capability\nResources   Attachments   AT050TN43 V.1 Pre Ver01 20100511 (A050-43-TT-11)_201102115899.pdf  (598 ko)    "
},
{
	"uri": "https://tang.sipeed.com/en/getting-started/installing-td-ide/",
	"title": "Installing Tang Dynasty IDE",
	"tags": [],
	"description": "",
	"content": "Find out how to install Tang Dynasty IDE on Windows and Linux.\n Installing TD IDE on Linux Installing TD IDE on Windows  "
},
{
	"uri": "https://tang.sipeed.com/en/using-tang/",
	"title": "Using Tang Primer",
	"tags": [],
	"description": "",
	"content": " Chapter 3 Using Tang Primer Here you can find basics of using Tang Primer and it\u0026rsquo;s peripherals. Learn with small examples on every step of the way.\n Using Primer\u0026rsquo;s GPIO Using MicroSD Card Using LCD display Using Camera Module Using Built-in SDRAM  "
},
{
	"uri": "https://tang.sipeed.com/en/risc-v-core/",
	"title": "Working with RISC-V",
	"tags": [],
	"description": "",
	"content": " Chapter 4 Working with RISC-V Here you can learn more about different RISC-V Implementations ported to Tang Primer board. This chapter covers the basics of using these RV cores and some examples to get you started on awesome RISC-V ISA.\n Hummingbird Core PicoRV32 Core  "
},
{
	"uri": "https://tang.sipeed.com/en/using-tang/using-camera/",
	"title": "Using Camera Module",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://tang.sipeed.com/en/hardware-overview/rv-debugger/",
	"title": "RV Debugger",
	"tags": [],
	"description": "",
	"content": " Resources   Attachments   FT2232D(Schematic).pdf  (1275 ko)    "
},
{
	"uri": "https://tang.sipeed.com/en/getting-started/installing-usb-driver/",
	"title": "Installing USB Driver",
	"tags": [],
	"description": "",
	"content": "Find out how to install USB Drivers on Windows and Linux.\n Installing USB driver on Linux Installing USB driver on Windows  "
},
{
	"uri": "https://tang.sipeed.com/en/dev-guide/",
	"title": "Developer Guide",
	"tags": [],
	"description": "",
	"content": " Chapter 5 Developer Guide Here we’ll cover topics related to RISC-V and Tang Primer FPGA platform development.\n Buinding RISC-V SoftCore Using Yosys with Tang Primer  "
},
{
	"uri": "https://tang.sipeed.com/en/using-tang/builtin-sdram/",
	"title": "Using Built-in SDRAM",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://tang.sipeed.com/en/faq/",
	"title": "TroubleshootingFAQ",
	"tags": [],
	"description": "",
	"content": " Chapter 6 Some Chapter title Lorem Ipsum.\n"
},
{
	"uri": "https://tang.sipeed.com/en/contribute/",
	"title": "Contribute",
	"tags": [],
	"description": "",
	"content": " Chapter 7 Some Chapter title Lorem Ipsum.\n"
},
{
	"uri": "https://tang.sipeed.com/en/dev-guide/building-rv-core/",
	"title": "Buinding RISC-V SoftCore",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://tang.sipeed.com/en/dev-guide/using-yosys/",
	"title": "Using Yosys with Tang Primer",
	"tags": [],
	"description": "",
	"content": " The Yosys now support Verilog synthesis for Anlogic\u0026rsquo;s FPGA. Although support is partial, it progressing towards having full synthesis support.\nPrerequisites For Ubuntu Linux 16.04 LTS the following commands will install all prerequisites for building yosys:\nsudo apt-get install build-essential clang bison flex \\ libreadline-dev gawk tcl-dev libffi-dev git \\ graphviz xdot pkg-config python3  Download Yosys from Github Clone the Yosys repository from Github.\ngit clone https://github.com/YosysHQ/yosys.git  Build and Install Yosys To build Yosys simply type \u0026lsquo;make\u0026rsquo; in this directory.\nmake make test sudo make install  Compile the Anlogic Demo We are going to compile an Anlogic example from Yosys examples directory.\nSetup TD environment for demo For Place and Route, we still need Official TD tools.\nset TD_HOME env variable to the full path to the TD as follow.\nexport TD_HOME=\u0026lt;TD Install Directory Path\u0026gt;  Finally, we are ready to build our demo.\ncd examples/anlogic/ bash build.sh  This build will produce demo.bit that can be download into Tang Primer via TD Download tool.\n"
},
{
	"uri": "https://tang.sipeed.com/en/getting-started/getting-to-blinky/",
	"title": "Getting to Blinky",
	"tags": [],
	"description": "",
	"content": " The Blinky example is good way to test the setup. The following example will blink the Tang Primer\u0026rsquo;s onboard RGB LED.\nGet the blinky example code from github.com\ngit clone https://github.com/Lichee-Pi/Tang_FPGA_Examples  You will need git for the above command to work.\n Run TD IDE in GUI mode\n$ td -gui  Open the Blinky example. In the Menubar goto Project -\u0026gt; Open Project or use the shortcut key Ctrl+Alt+O.\nSelect the Project file Tang_FPGA_Examples/0.LED/prj/led.al in Open Dialog.\nGenerate the Bitstream file. Click on the Run icon to start the compilation process.\nIf the compilation is successful you will see the Console log as shown in picture below.\nDownload Bitstrean to Tang Primer. Plug in your Tang Primer board to USB and click on Download icon to open the Download dialog.\nMake sure your device detacted by TD IDE. Add generated bitstream file by clicking on Add button.\nIf you can\u0026rsquo;t see your device, try refreshing it by clicking on the Refresh button.\n Select the Bitstream file Tang_FPGA_Examples/0.LED/prj/led.bit in the Downloading \u0026amp; Programming dialog, then click the Open button. (You may also double-click on led.bit to automatically open it.)\nClick on the Run button to start the download process.\nDue to some unknown bug, JTAG only works with 400kbps or lower speed on Linux.\n Wait for Download progress to reach 100%.\n"
},
{
	"uri": "https://tang.sipeed.com/en/getting-started/installing-usb-driver/linux/",
	"title": "Install TD driver on Linux",
	"tags": [],
	"description": "",
	"content": " Check for default linux driver Insert Tang Primer into your computer and execute lsusb to see the information. Make sure USB VID:PID is 0547:1002 as shown in image below.\nCreate a new udev rule file Set udev rules to enable Tang Primer to be accessed by the plugdev group\nExecute the following command in terminal to create a new udev rules file.\nsudo nano /etc/udev/rules.d/91-anlogic-jtag.rules  Copy the following code into text editor and save it, as shown in following image.\nSUBSYSTEMS==\u0026quot;usb\u0026quot;, ATTRS{idVendor}==\u0026quot;0547\u0026quot;, ATTRS{idProduct}==\u0026quot;1002\u0026quot;, \\ GROUP=\u0026quot;plugdev\u0026quot;, \\ MODE=\u0026quot;0660\u0026quot;  Execute the following command in terminal to restart the udev service.\nsudo service udev restart  Check if device detected by Tang Dynasty IDE Go to \u0026lt;TD installation directory\u0026gt;/bin/ and execute the following command to open TD IDE in GUI mode.\n./td -gui  Click on Download buttion as shown in following image.\nPlugin Tang Primer into your computer and hit Refresh buttion on Download Dialog box.\nDue to some unknown bug, JTAG only works with 400kbps or lower speed.\n Congratulations, you have setup the TD driver on Linux.\n"
},
{
	"uri": "https://tang.sipeed.com/en/getting-started/installing-usb-driver/windows/",
	"title": "Install TD driver on Windows",
	"tags": [],
	"description": "",
	"content": " Check for default windows driver Insert Tang Primer into your computer and open Device Manager to see the information. Make sure USB VID:PID is 0547:1002.\nInstall drivers Double click on WinUsb Device to select update driver\nBrowse the folder and select the driver directory under the TD installation directory. Click OK to start the installation.\nThe installation is successful and can be seen in the device manager.\nCheck if device detected by Tang Dynasty IDE Click on Download button as shown in following image.\nPlugin Tang Primer into your computer and hit Refresh buttion on Download Dialog box.\nCongratulations, you have setup the TD driver on Windows.\n"
},
{
	"uri": "https://tang.sipeed.com/en/getting-started/installing-td-ide/linux/",
	"title": "Install on Linux",
	"tags": [],
	"description": "",
	"content": "Once you have downloaded the installer archive, open Terminal and cd into that directory.\ncd \u0026lt;path to installer archive directory\u0026gt;  In this section, you will need sudo privileges.\n The /opt directory is reserved for all the software and add-on packages that are not part of the default installation. Create a directory for your TD IDE installation.\nsudo mkdir /opt/TD_DECEMBER2018  and extract TD into the /opt/TD_DECEMBER2018 directory:\nsudo tar -xvf TD_DECEMBER2018_GOLDEN_RHEL.tar.gz -d /opt/TD_DECEMBER2018/  Create an /usr/bin/td executable by creating a new symbolic link from the /opt/TD_DECEMBER2018/bin/td\nsudo ln -s /opt/TD_DECEMBER2018/bin/td /usr/bin/td  Run TD IDE in GUI mode\n$ td -gui  Congratulations, you have installed the TD IDE on Linux.\n"
},
{
	"uri": "https://tang.sipeed.com/en/getting-started/installing-td-ide/windows/",
	"title": "Install on Windows",
	"tags": [],
	"description": "",
	"content": "Once you have downloaded the installer, open it and you will see a welcome screen.\nOn this screen you can choose where you want to install TD IDE. By default it installs to C:\\Anlogic\\TD4.3.633\nClick next, and the installer will begin copying the files it needs to install TD IDE.\nWhen it\u0026rsquo;s finished installing you should see this following screen. Click Finish to complete the installation.\nGo to start menu and click on TD icon to start the IDE.\nCongratulations, you have installed the TD IDE on windows.\n"
},
{
	"uri": "https://tang.sipeed.com/en/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://tang.sipeed.com/en/credits/",
	"title": "Credits",
	"tags": [],
	"description": "",
	"content": " Contributors Thanks to them  for making Open Source Software a better place !\n.ghContributors{ display:flex; flex-flow: wrap; align-content: flex-start } .ghContributors  div{ width: 50% ; display: inline-flex; margin-bottom: 5px; } .ghContributors  div label{ padding-left: 4px ; } .ghContributors  div span{ font-size: x-small; padding-left: 4px ; }   @kprasadvnsi 16 commits   @JanKok 6 commits   "
},
{
	"uri": "https://tang.sipeed.com/en/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://tang.sipeed.com/en/",
	"title": "Tang Primer Documentation",
	"tags": [],
	"description": "",
	"content": " Tang Primer Docs Tang Primer, an extremely polished open source RISC-V development board.\nTang Primer was born in the wake of RISC-V. After three months of development and iterations, it finally releases as an Open Source board in 2018.\nTang Primer not only takes on the expectations of open source developers, but also promotes the development and education related to RISC-V architecture in China, and introduces an excellent development board in China to the world.\n"
}]